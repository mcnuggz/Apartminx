@model Apartment.Models.Spouse

@{
    ViewBag.Title = "Create";
}
<legend class="legend">Spouse Information</legend>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="spouseForm">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="well well-lg">
            <fieldset class="editor">
                @Html.LabelFor(model => model.IsMarried)
                @Html.CheckBoxFor(model => model.IsMarried, new { style = "margin-left: 20px;" })
                @Html.ValidationMessageFor(model => model.IsMarried, "", new { @class = "text-danger" })
            </fieldset>
            <hr />
            <fieldset class="editor">
                @Html.LabelFor(model => model.FirstName)
                @Html.TextBoxFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.MiddleName)
                @Html.TextBoxFor(model => model.MiddleName)
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.LastName)
                @Html.TextBoxFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.FormerNames)
                @Html.TextBoxFor(model => model.FormerNames)
                @Html.ValidationMessageFor(model => model.FormerNames, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.SpouseSecurity)
                @Html.TextBoxFor(model => model.SpouseSecurity)
                @Html.ValidationMessageFor(model => model.SpouseSecurity, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.SpouseDriverLicense)
                @Html.TextBoxFor(model => model.SpouseDriverLicense)
                @Html.ValidationMessageFor(model => model.SpouseDriverLicense, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.State)
                @Html.EnumDropDownListFor(model => model.State, new { style = "margin-left: 20px;" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.GovtId)
                @Html.TextBoxFor(model => model.GovtId)
                @Html.ValidationMessageFor(model => model.GovtId, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.Birthdate)
                @Html.TextBoxFor(model => model.Birthdate)
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.Height)
                @Html.TextBoxFor(model => model.Height, new { style = "width: 75px;" })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.Weight)
                @Html.TextBoxFor(model => model.Weight, new { style = "width: 75px;" })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.Gender)
                @Html.EnumDropDownListFor(model => model.Gender, new { style = "margin-left: 20px;" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.EyeColor)
                @Html.TextBoxFor(model => model.EyeColor, new { style = "width: 75px;" })
                @Html.ValidationMessageFor(model => model.EyeColor, "", new { @class = "text-danger" })
            </fieldset>
            <hr />
            <fieldset class="editor">
                @Html.LabelFor(model => model.USCitizen)
                @Html.CheckBoxFor(model => model.USCitizen, new { style = "margin-left: 20px;" })
                @Html.ValidationMessageFor(model => model.USCitizen, "", new { @class = "text-danger" })
            </fieldset>
        </div>

        <span class="jumboLegend">Employment</span>
        <div class="well well-lg">
            <fieldset class="editor">
                @Html.LabelFor(model => model.SpouseEmployed)
                @Html.CheckBoxFor(model => model.SpouseEmployed, new { style = "margin-left: 20px;" })
                @Html.ValidationMessageFor(model => model.SpouseEmployed, "", new { @class = "text-danger" })
            </fieldset>
            <hr />
            <fieldset class="editor">
                @Html.LabelFor(model => model.Employer)
                @Html.TextBoxFor(model => model.Employer)
                @Html.ValidationMessageFor(model => model.Employer, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.Address)
                @Html.TextBoxFor(model => model.Address)
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.City)
                @Html.TextBoxFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.WorkState)
                @Html.EnumDropDownListFor(model => model.WorkState, new { style = "margin-left: 20px;" })
                @Html.ValidationMessageFor(model => model.WorkState, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.Zip)
                @Html.TextBoxFor(model => model.Zip)
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.WorkPhone)
                @Html.TextBoxFor(model => model.WorkPhone)
                @Html.ValidationMessageFor(model => model.WorkPhone, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.Position)
                @Html.TextBoxFor(model => model.Position)
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.StartDate)
                @Html.TextBoxFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.GrossIncome)
                @Html.TextBoxFor(model => model.GrossIncome)
                @Html.ValidationMessageFor(model => model.GrossIncome, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.SupervisorName)
                @Html.TextBoxFor(model => model.SupervisorName)
                @Html.ValidationMessageFor(model => model.SupervisorName, "", new { @class = "text-danger" })
            </fieldset>
            <fieldset class="editor">
                @Html.LabelFor(model => model.SupervisorPhone)
                @Html.TextBoxFor(model => model.SupervisorPhone)
                @Html.ValidationMessageFor(model => model.SupervisorPhone, "", new { @class = "text-danger" })
            </fieldset>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Continue" class="btn btn-primary btn-lg" />
            </div>
        </div>
    </div>
}
@if (User.IsInRole("Admin") || User.IsInRole("Landlord"))
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}